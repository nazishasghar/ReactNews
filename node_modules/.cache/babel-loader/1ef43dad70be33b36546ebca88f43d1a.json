{"ast":null,"code":"var _jsxFileName = \"/Users/nazishasghar/helloworld/src/components/Screens/Headlines/Headline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NewsCard from '../../NewsCard/NewsCard';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Headline() {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getNews = async props => {\n    try {\n      const response = await fetch(`https://newsapi.org/v2/top-headlines?country=${props}&apiKey=610f3044f4c54d95b5f807c9c7233a2c`);\n      const json = await response.json();\n      setData(json.articles);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getNews('in');\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => {\n        /*#__PURE__*/\n        _jsxDEV(NewsCard, {\n          urlToImage: item.urlToImage,\n          title: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Headline, \"tDUzHRkSJq0xNfTbNRkKUCkGzw8=\");\n\n_c = Headline;\nexport default Headline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Headline\");","map":{"version":3,"sources":["/Users/nazishasghar/helloworld/src/components/Screens/Headlines/Headline.js"],"names":["React","useEffect","useState","NewsCard","Spinner","Headline","isLoading","setLoading","data","setData","getNews","props","response","fetch","json","articles","error","console","map","item","urlToImage","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAK,CAACC,SAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMQ,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gDAA+CF,KAAM,0CAAvD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAL,MAAAA,OAAO,CAACK,IAAI,CAACC,QAAN,CAAP;AACD,KAJA,CAIC,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KANA,SAMS;AACRT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACL,GAVG;;AAWJN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFQ,EAEP,EAFO,CAAT;;AAGA,MAAGJ,SAAH,EAAa;AACT,wBAAO;AAAA,6BAAK,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK;AACD,wBACI;AAAA,gBACIE,IAAI,CAACU,GAAL,CAASC,IAAI,IAAI;AACd;AAAA,gBAAC,QAAD;AAAU,UAAA,UAAU,EAAEA,IAAI,CAACC,UAA3B;AAAuC,UAAA,KAAK,EAAGD,IAAI,CAACE;AAApD;AAAA;AAAA;AAAA;AAAA;AACH,OAFA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AAEA;;GA9BQhB,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport NewsCard from '../../NewsCard/NewsCard';\nimport { Spinner } from 'react-bootstrap';\nfunction Headline() {\n    const[isLoading,setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const getNews = async (props) => {\n      try {\n       const response = await fetch(`https://newsapi.org/v2/top-headlines?country=${props}&apiKey=610f3044f4c54d95b5f807c9c7233a2c`);\n       const json = await response.json();\n       setData(json.articles);\n     } catch (error) {\n       console.error(error);\n     } finally {\n       setLoading(false);\n     }\n}\nuseEffect(() => {\n    getNews('in');\n},[]);\nif(isLoading){\n    return <div><Spinner animation=\"border\" /></div>\n}\nelse {\n    return (\n        <div>\n           {data.map(item => {\n               <NewsCard urlToImage={item.urlToImage} title ={item.title}/>\n           })}\n        </div>\n    );\n}\n    \n}\n\nexport default Headline;"]},"metadata":{},"sourceType":"module"}